
SPLASH:
	ld	sp,$5B00
	ld	b, (24 * 32) / 8
	ld	de, $0909	; No bright, paper = blue, ink = blue
.cls_blue:	push	de
	push	de
	push	de
	push	de
	djnz	.cls_blue

	ld	h,3	; Loop over 3 screen-thirds
.loop_screen_thirds:
	ld	de,$0f0f
	exx
	ld	de,$ffff
	ld	l,4	; 4 pattern repeats in screen-third (loop counter)
.loop_lines_in_cell:
	ld	a,16	; 16 pairs of identical pixel bytes in screen third (loop counter)
.loop_cells_in_third:
	ld	b,32/4
.loop_words_in_line:
	push	de
	push	de
	djnz	.loop_words_in_line
.next_pixel_row:	exx
	dec	a
	jr	nz,.loop_cells_in_third
	srl	e
	ld	d,e
	exx
	srl	e
	ld	d,e
	exx
	dec	l
	jr	nz,.loop_lines_in_cell
	dec	h
	jr	nz,.loop_screen_thirds

	halt
COPYRIGHT:
	ld	sp, $f000	; Placeholder stack top.
	ld	de, COPYRIGHT_TEXT
	ld	b, 27
	ld	a, %00111000
	ld	hl, $1601
	call	$800
	halt

	; Draw a steep diagonal section of rainbow down the screen, from given x position,
	; A: x-position (0â€“45); C: attribute to paint
STRIPE:
	ld	de, 32
	ld	h, $58	; HL := attribute pointer
	ld	l, a
	sub	e
	jr	nc, .stripe_rightoff	; Stripe position is beyond edge of screen
	ld	a, l
	cp	12	; half of screen height
	jr	nc, .stripe_mid	; pattern is uninterrupted, and does not cross off screen
.stripe_leftoff:
	ld	l, a
	ld	b, a
	inc	b
	jr	.stripe_mid_loop
.stripe_mid:
	ld	l, a
	ld	a, b
	ld	b, 12
.stripe_mid_loop:
	ld	(hl), c
	add	hl, de
	ld	(hl), c
	add	hl, de
	dec	l
	djnz	.stripe_mid_loop
	ret
.stripe_rightoff:
	inc	a	; a := distance past last column + 1
	add	a	; a := double that (so row to start painting on)
	ld	b, a	; b := same thing (but in B, to use as counter)
	ld	a, 32+12
	sub	l	; a := height (in double cells) of stripe to paint
	ld	l, e	; l := 32
	dec	l	; l := 31 (last column)
.drop_down:
	add	hl, de
	djnz	.drop_down
	ld	b, a
	jr	.stripe_mid_loop

COPYRIGHT_TEXT:
	db	$a9,' 1982 RetroXZ Research Ltd'